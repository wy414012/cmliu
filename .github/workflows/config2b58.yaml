name: Update TV API Config

on:
  schedule:
    - cron: '0 0 * * 1'  # Run every Monday at midnight
  workflow_dispatch:  # Allow manual triggering

jobs:
  update-config:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v5

      - name: Setup Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'

      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install base58

      - name: Check MOONTV_CONFIG_URL variable
        run: |
          # Check if MOONTV_CONFIG_URL variable is set
          MOONTV_CONFIG_URL="${{ vars.MOONTV_CONFIG_URL }}"
          if [ -z "$MOONTV_CONFIG_URL" ]; then
            echo "❌ Error: MOONTV_CONFIG_URL variable is not set"
            echo "Please add MOONTV_CONFIG_URL variable in repository settings:"
            echo "1. Go to Settings > Secrets and variables > Actions"
            echo "2. Add a new variable under the Variables tab"
            echo "3. Name: MOONTV_CONFIG_URL"
            echo "4. Value: URL of the configuration file"
            exit 1
          fi
          echo "✅ MOONTV_CONFIG_URL variable is set: $MOONTV_CONFIG_URL"

      - name: Download and process config
        run: |
          # Download the config file
          MOONTV_CONFIG_URL="${{ vars.MOONTV_CONFIG_URL }}"
          echo "Downloading config file: $MOONTV_CONFIG_URL"
          curl -s -o config.json "$MOONTV_CONFIG_URL"
          
          # Compress and encode with base58
          python3 -c "
          import json
          import base58
          import sys
          
          # Read and parse JSON
          with open('config.json', 'r', encoding='utf-8') as f:
              data = json.load(f)
          
          # Compress JSON (remove whitespace and newlines)
          compressed = json.dumps(data, separators=(',', ':'), ensure_ascii=False)
          
          # Base58 encoding
          encoded = base58.b58encode(compressed.encode('utf-8')).decode('ascii')
          
          # Write to file
          with open('tvapi_config_json', 'w', encoding='utf-8') as f:
              f.write(encoded)
          
          print('Config file processed and encoded successfully')
          "

      - name: Check for changes and commit
        run: |
            git config --local user.email "action@github.com"
            git config --local user.name "GitHub Action"
            git add tvapi_config_json
            
            # Check for changes
            if git diff --cached --quiet; then
            echo "No file changes detected, skipping commit"
            else
            echo "Detected file changes, starting commit"
            git commit -m "Downloaded file on $(date "+%Y/%m/%d %H:%M:%S")"
            git remote set-url origin https://x-access-token:${{ secrets.GITHUB_TOKEN }}@github.com/${{github.repository}}.git
            git push
            echo "Commit completed"
            fi
